openapi: 3.0.0

info:
  version: '1.0'
  title: 'LBAW UPConnect Web API'
  description: 'Web Resources Specification (A7) for UPConnect'

servers:
- url: http://lbaw.fe.up.pt
  description: Production server

externalDocs:
  description: Find more info here.
  url: https://git.fe.up.pt/lbaw/lbaw2324/lbaw2381/-/wikis/home

tags:
- name: 'M01: Authentication'
- name: 'M02: Individual Profile'
- name: 'M03: Posts (Questions, Answers and Comments)'
- name: 'M04: Tags'
- name: 'M05: Search'
- name: 'M06: Administration and Static Pages' 
- name: 'M07: Moderator Pages'

paths:

  ############# Authentication #############

  /login:
  
    get:
      operationId: R101
      summary: 'R101: Login form'
      description: 'Provide login form. Access: PUB'
      tags:
        - 'M01: Authentication'
        
      responses:
        '200': 
          description: 'Ok. Show login form (UI02)'
        
    post:
      operationId: R102
      summary: 'R102: Login Action'
      description: 'Processes the login form submission. Access: PUB'
      tags:
        - 'M01: Authentication'
        
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
              required:
                - email
                - password
                
      responses:
        '302':
          description: 'Redirect after processing the login credentials.'
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: 'Successful authentication. Redirect to Main Feed.'
                  value: '/feed'
                302Error:
                  description: 'Failed authentication. Redirect to login form'
                  value: '/login'
                
  /logout:
  
    post:
      operationId: R103
      summary: 'R103: Logout Action'
      description: 'Logout the current authenticated user. Access: USR, ADM'
      tags:
          - 'M01: Authentication'
          
      responses:
        '302':
          description: 'Redirect after processing logout.'
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: 'Sucessful logout: Redirect to login form.'
                  value: '/login'
                    
  /register:
  
    get:
      operationId: R104
      summary: 'R104: Register Form'
      description: 'Provide new user registration form. Access: PUB'
      tags:
          - 'M01: Authentication'
          
      responses:
        '200':
          description: 'Ok. Show Sign-Up form (UI03)'
          
    post:
      operationId: R105
      summary: 'R105: Register Action'
      description: 'Processes the new user registration form submission. Access: PUB'
      tags:
        - 'M01: Authentication'

      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
                picture:
                  type: string
                  format: binary
              required:
                - name
                - email
                - password

      responses:
        '302':
          description: 'Redirect after processing the new user information.'
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: 'Successful authentication. Redirect to user profile.'
                  value: '/users/{id}'
                302Failure:
                  description: 'Failed authentication. Redirect back to register form.'
                  value: '/register'
                  
  ############# Individual Profile #############                
                  
  /users/{id}:
  
    get:
      operationId: R201
      summary: 'R201: View user profile'
      description: 'Show the individual user profile. Access: PUB'
      tags:
        - 'M02: Individual Profile'
        
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true

      responses:
       '200':
         description: 'Ok. Show User Profile (UI04)'
       '302':
         description: 'User does not exist'
         headers:
           Location:
             schema:
               type: string
             example:
               302Failure:
                 description: 'Failed. No user of given ID found.'
                 value: '/feed'
         
  /users/edit:
  
    get:
      operationId: R202
      summary: 'R202: Edit user profile'
      description: 'Show the edit user profile page. Access: AUT, MOD, ADM'
      tags:
        - 'M02: Individual Profile'
        
      responses:
        '200':
          description: 'Ok. Show Edit Profile form'
        '401':
          description: 'Unauthorized. You cannot edit this user profile'
          headers:
            Location:
              schema:
               type: string
              examples:
                401Success:
                  description: 'Redirect back to feed.'
                  value: '/feed'
          
    put:
      operationId: R203
      summary: 'R203: Edit user profile'
      description: 'Submits the edited user profile. Access: USR'
      tags:
        - 'M02: Individual Profile'
        
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                  format: password
                password:
                  type: string
                  format: password
                picture:
                  type: string
                  format: binary
              
              required:
                - name
                - email
                - password
                - picture
                
      responses:
        '302':
          description: 'Redirect after processing inserted user information'
          headers: 
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: 'Success updating details. Redirect to user personal profile page'
                  value: '/users/{id}'
                302Failure:
                  description: 'Failed updating details. Redirect back to edit user profile page'
                  value: '/users/edit'
    
  /users/deleteaccount:
  
    post:
      operationId: R204
      summary: 'R204: Deletes a user.'
      description: 'Deletes a user account. Access: AUT, ADM'
      tags:
        - 'M02: Individual Profile'
        
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                id:
                  type: integer
              required:
                - id
    
      responses:
        '302':
          description: 'Redirect after deletion of account'
          headers:
            Location:
              schema:
                type: string
              example:
                302Success:
                  description: 'Success deleting account. Redirect to login page.'
                  value: '/login'
                
  
  /users/{id}/follow:
    
    post:
      operationId: R205
      summary: 'R205: Follows a user. Access: USR'
      tags:
        - 'M02: Individual Profile'
        
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      
      responses:
        '200':
          description: 'Ok. Followed the user'
        '401':
          description: 'Unauthorized. The user must be authenticated to perform this action.'
          
  /users/{id}/unfollow:
    
    post:
      operationId: R206
      summary: 'R206: Unfollows a user. Access: USR'
      tags:
        - 'M02: Individual Profile'
        
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      
      responses:
        '200':
          description: 'Ok. Unfollowed the user'
        '401':
          description: 'Unauthorized. The user must be authenticated to perform this action.'
                
  ############# Posts #############
  
  /question/{id}:
    
    get:
      operationId: R301
      summary: 'R301: View Question Page'
      description: 'Display the question page. Access: PUB'
      tags:
        - 'M03: Posts (Questions, Answers and Comments)'
        
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
        
      responses:
        '200':
          description: 'Ok. Show Question Page'
        '302':
          description: 'Question does not exist'
          headers:
           Location:
             schema:
               type: string
             example:
               302Failure:
                 description: 'Failed. No question of given ID found.'
  
  
  /question/create:
  
    get:
      operationId: R302
      summary: 'R302: Show Question creation form'
      description: 'Shows the question creation form. Access: USR'
      tags:
        - 'M03: Posts (Questions, Answers and Comments)'
        
      responses:
        '200': 
          description: 'Ok. Show Question creation form'
        '401':
          description: 'Unauthorized. You do not have permission to perform this action.'
      
    post:
      operationId: R303
      summary: 'R303: Create a New Question'
      description: 'Processes the Question creation form . Access: USR'
      tags:
        - 'M03: Posts (Questions, Answers and Comments)'
        
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                body:
                  type: string
                tags:
                  type: array
                  items:
                    type: string
              required:
                - title
                - body
                
      responses:
        '302':
          description: 'Redirect after processing question creation form.'
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: 'New question successfully created.'
                  value: 'question/{id}'
                302Error:
                  description: 'Error creating question. Redirect to question creation form.'
                  value: 'question/create'
                
          
  /question/{id}/edit:
    
    get:
      operationId: R304
      summary: 'R304: Retrieve question editing form.'
      description: 'Shows the question editing form. Access: AUT'
      tags:
        - 'M03: Posts (Questions, Answers and Comments)'
        
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
        
      responses:
       '200': 
         description: 'Ok. Show edit question form' 
       '401':
          description: 'Unauthorized. You do not have permission to perform this action.'
        
    put:
      operationId: R305
      summary: 'R305: Edit a Question'
      description: 'Allows the author to edit a question. Access: AUT'
      tags:
        - 'M03: Posts (Questions, Answers and Comments)'
        
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                body:
                  type: string
                tags:
                  type: array
                  items:
                    type: string
              required:
                - title
                - body
                - tags
          
      responses:
        '302':
          description: 'Redirect after processing question editing form'
          headers: 
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: 'Success editing question. Redirect to question'
                  value: '/question/{id}'
                302Failure:
                  description: 'Failed updating details. Redirect back to edit user profile page'
                  value: '/question/{id}/edit'    
          
  /question/{id}/vote:
  
    post:
      operationId: R306
      summary: 'R306: Vote on question'
      description: 'Submit vote for a question. Access: USR'
      tags:
        - 'M03: Posts (Questions, Answers and Comments)'
        
      parameters:
        - in: path
          name: id
          description: 'Unique identifier of the question being voted on'
          schema:
            type: integer
          required: true
          
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                vote:
                  type: integer
              required:
                - vote
                
      responses:
        '200' :
          description: 'Success. The vote was submited successfully'   
        '401' : 
          description: 'Unauthorized. The user must be authenticated to vote'
          
  /question/{id}/delete:
    
    post:
      operationId: R307
      summary: 'R307: Delete a Question'
      description: 'Allows the deletion of a question. Access: AUT, MOD, ADM'
      tags:
        - 'M03: Posts (Questions, Answers and Comments)'
        
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          
      responses:
        '200':
          description: 'The question has been successfully deleted.'
        '403':
          description: 'Forbidden. The user does not have permission to delete this question.'
          
  /question/{id}/follow:
    
    post:
      operationId: R308
      summary: 'R308: Follows a question. Access: USR'
      description: 'Allows the following of a question. Access: USR'
      tags:
        - 'M03: Posts (Questions, Answers and Comments)'
        
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      
      responses:
        '200':
          description: 'Ok. Followed the question'
        '401':
          description: 'Unauthorized. The user must be authenticated to perform this action.'
        
  /question/{id}/unfollow:
    
    post:
      operationId: R309
      summary: 'R309: Unfollows a question. Access: USR'
      description: 'Allows the unfollowing of a question. Access: USR'
      tags:
        - 'M03: Posts (Questions, Answers and Comments)'
        
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      
      responses:
        '200':
          description: 'Ok. Unfollowed the question'
        '401':
          description: 'Unauthorized. The user must be authenticated to perform this action.'
          
  /question/{id}/reports:
  
    get:
      operationId: R310
      summary: 'R310: Shows Question Reports'
      description: 'Displays the Report Logs for a question. Access: MOD, ADM'
      tags:
        - 'M03: Posts (Questions, Answers and Comments)'
        
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      
      responses:
        '200':
          description: 'OK. Show Report Logs'
        '403':
          description: 'Forbidden. You do not have permission to access this page.'

  /question/{id}/answers/create:
  
    get:
      operationId: R311
      summary: 'R311: Show answer creation form'
      description: 'Shows the form that will be used to create a new answer. Access: USR'
      tags:
        - 'M03: Posts (Questions, Answers and Comments)'
        
      parameters:
        - in: path
          name: id
          description: 'Question ID'
          schema:
            type: integer
          required: true
        
      responses:
        '200': 
          description: 'Ok. Show answer creation form'
        '401':
          description: 'Unauthorized. You do not have permission to perform this action.'
          
    post:
      operationId: R312
      summary: 'R312: Post an Answer'
      description: 'Processes answer creation form. Access: USR'
      tags:
        - 'M03: Posts (Questions, Answers and Comments)'
        
      parameters:
        - in: path
          name: id
          description: 'Question ID'
          schema:
            type: integer
          required: true
          
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
              required:
                - content
          
      responses:
        '302':
          description: 'Redirect after processing answer submission form.'
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: 'New answer successfully posted. Redirect back to question.'
                  value: 'question/{id}'
                302Error:
                  description: 'Error posting answer. Redirect to answer creation form.'
                  value: '/question/{id}/answers/create'
          
  
  /answers/{id}/edit:
  
    get:
      operationId: R313
      summary: 'R313: Show answer edition form.'
      description: 'Shows the form that will be used to edit an answer. Access: AUT'
      tags:
        - 'M03: Posts (Questions, Answers and Comments)'
        
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          
      responses:
       '200': 
         description: 'Ok. Show edit answer form' 
       '401':
          description: 'Unauthorized. You do not have permission to perform this action.'
        
    put:
      operationId: R314
      summary: 'R314: Edit an Answer'
      description: 'Allows a user to edit their own answer. Access: AUT'
      tags:
        - 'M03: Posts (Questions, Answers and Comments)'
        
      parameters:
        - in: path
          name: id
          description: 'Unique identifier of the answer to be edited.'
          schema:
            type: integer
          required: true
          
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
              required:
                - content
                
      responses:
        '200':
          description: 'OK. Answer successfully updated.'
          
  /answers/{id}/vote:
  
    post:
      operationId: R315
      summary: 'R315: Vote on answer'
      description: 'Submit vote for a answer. Access: USR'
      tags:
        - 'M03: Posts (Questions, Answers and Comments)'
        
      parameters:
        - in: path
          name: id
          description: 'Answer ID'
          schema:
            type: integer
          required: true
          
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                vote:
                  type: integer
              required:
                - vote
                
      responses:
        '200' :
          description: 'Success. The vote was submitted successfully'   
        '401' : 
          description: 'Unauthorized. The user must be authenticated to vote'          
          
  /answers/{id}/delete:
    
    post:
      operationId: R316
      summary: 'R316: Delete an Answer'
      description: 'Allows the deletion of an answer. Access: USR, MOD, ADM'
      tags:
        - 'M03: Posts (Questions, Answers and Comments)'
        
      parameters:
        - in: path
          name: id
          description: 'Answer ID'
          schema:
            type: integer
          required: true
          
      responses:
        '200':
          description: 'The answer has been successfully deleted.'
        '403':
          description: 'Forbidden. The user does not have permission to delete this answer.'
          
  /answers/{id}/reports:
  
    get:
      operationId: R317
      summary: 'R317: Shows Answer Reports'
      description: 'Displays the Report Logs for an answer. Access: MOD, ADM'
      tags:
        - 'M03: Posts (Questions, Answers and Comments)'
        
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      
      responses:
        '200':
          description: 'OK. Show Report Logs'
        '403':
          description: 'Forbidden. You do not have permission to access this page.'
          
  
  /questions/{id}/comment/create:
  
    get:
      operationId: R318
      summary: 'R318: Show comment creation form'
      description: 'Shows the form that will be used to create a new comment. Access: USR'
      tags:
        - 'M03: Posts (Questions, Answers and Comments)'
        
      parameters:
        - in: path
          name: id
          description: 'Question ID'
          schema:
            type: integer
          required: true
        
      responses:
        '200': 
          description: 'Ok. Show comment creation form'
        '401':
          description: 'Unauthorized. You do not have permission to perform this action.'
          
    post:
      operationId: R319
      summary: 'R319: Post a Comment under Question'
      description: 'Allows an a user to post an comment under a specific question. Access: USR'
      tags:
        - 'M03: Posts (Questions, Answers and Comments)'
        
      parameters:
        - in: path
          name: id
          description: 'Question ID'
          schema:
            type: integer
          required: true
          
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
              required:
                - content
                
      responses:
        '302':
          description: 'Redirect after posting new comment.'
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: 'New comment successfully posted. Redirect back to question'
                  value: 'question/{id}'
                302Error:
                  description: 'Error posting comment. Redirect to comment creation form.'
                  value: '/questions/{id}/comment/create'
  
          
  /questions/{id}/answers/{answerId}/comment/create:
  
    get:
      operationId: R320
      summary: 'R320: Show comment creation form'
      description: 'Shows the form that will be used to create a new comment. Access: USR'
      tags:
        - 'M03: Posts (Questions, Answers and Comments)'
        
      parameters:
        - in: path
          name: id
          description: 'Question ID'
          schema:
            type: integer
          required: true
        - in: path
          name: answerId
          description: 'Answer ID'
          schema:
            type: integer
          required: true
          
      responses:
        '200': 
          description: 'Ok. Show comment creation form'
        '401':
          description: 'Unauthorized. You do not have permission to perform this action.'
          
    post:
      operationId: R321
      summary: 'R321: Post a Comment under Answer'
      description: 'Allows an a user to post an comment under a specific answer. Access: USR'
      tags:
        - 'M03: Posts (Questions, Answers and Comments)'
        
      parameters:
        - in: path
          name: id
          description: 'Question ID'
          schema:
            type: integer
          required: true
        - in: path
          name: answerId
          description: 'Answer ID'
          schema:
            type: integer
          required: true
          
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
              required:
                - content
                
      responses:
        '302':
          description: 'Redirect after posting new comment.'
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: 'New comment successfully posted. Redirect back to question'
                  value: 'question/{id}'
                302Error:
                  description: 'Error posting comment. Redirect to comment creation form.'
                  value: '/questions/{id}/answers/{answerId}/comment/create'

  /comments/{id}/edit:
  
    get:
      operationId: R322
      summary: 'R322: Retrieve comment edition form.'
      description: 'Shows the form that will be used to edit a comment. Access: AUT'
      tags:
        - 'M03: Posts (Questions, Answers and Comments)'
        
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          
      responses:
       '200': 
         description: 'Ok. Show edit comment form' 
       '401':
          description: 'Unauthorized. You do not have permission to perform this action.'
        
    put:
      operationId: R323
      summary: 'R323: Edit a comment'
      description: 'Allows the editing of a comment. Access: AUT'
      tags:
        - 'M03: Posts (Questions, Answers and Comments)'
        
      parameters:
        - in: path
          name: id
          description: 'Comment ID'
          schema:
            type: integer
          required: true
          
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
              required:
                - content
                
      responses:
        '200':
          description: 'OK. Comment successfully updated.'
          
  /comments/{id}/vote:
  
    post:
      operationId: R324
      summary: 'R324: Vote on comment'
      description: 'Submit vote for a comment. Access: USR'
      tags:
        - 'M03: Posts (Questions, Answers and Comments)'
        
      parameters:
        - in: path
          name: id
          description: 'Comment ID'
          schema:
            type: integer
          required: true
          
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                vote:
                  type: integer
              required:
                - vote
                
      responses:
        '200' :
          description: 'Success. The vote was submited successefully'   
        '401' : 
          description: 'Unauthorized. The user must be authenticated to vote'

  /comments/{id}/delete:
    
    post:
      operationId: R325
      summary: 'R325: Delete a Comment'
      description: 'Allows the deletion of a comment. Access: AUT, MOD, ADM'
      tags:
        - 'M03: Posts (Questions, Answers and Comments)'
        
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: 'Unique identifier of the comment to be deleted.'
          
      responses:
        '200':
          description: 'The comment has been successfully deleted.'
        '403':
          description: 'Forbidden. The user does not have permission to delete this comment.'
          
  /comment/{id}/reports:
  
    get:
      operationId: R326
      summary: 'R326: Shows Comment Reports'
      description: 'Displays the Report Logs for a comment. Access: MOD, ADM'
      tags:
        - 'M03: Posts (Questions, Answers and Comments)'
        
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      
      responses:
        '200':
          description: 'OK. Show Report Logs'
        '403':
          description: 'Forbidden. You do not have permission to access this page.'
 
          
  ############# Tags #############        
      
  /tag/{name}:
  
    get:
      operationId: R401
      summary: 'R401: View Tag Feed'
      description: 'Retrieves a feed of questions with a specific tag. Access: PUB'
      tags:
        - 'M04: Tags'
        
      parameters:
        - in: path
          name: name
          description: 'Tag name'
          schema:
            type: string
          required: true
      
      responses:
        '200':
          description: 'Ok. Show Tag Feed Page'
        '302':
          description: 'Tag does not exist'
          headers:
           Location:
             schema:
               type: string
             example:
               302Failure:
                 description: 'Failed. No Tag of given name found.'
                 
  /tag/{name}/follow:
    
    post:
      operationId: R402
      summary: 'R402: Follow Tag'
      description: 'Allows following a specific Tag. Access: USR'
      tags:
        - 'M04: Tags'
    
      parameters:
        - in: path
          name: name
          description: 'Tag name'
          schema:
            type: string
          required: true
      
      responses:
        '200':
          description: 'Ok. Followed a Tag.'
        '403':
          description: 'Forbidden.'
          
  /tag/{name}/unfollow:
    
    post:
      operationId: R403
      summary: 'R403: Unfollow Tag'
      description: 'Allows unfollowing a specific Tag. Access: USR'
      tags:
        - 'M04: Tags'
    
      parameters:
        - in: path
          name: name
          description: 'Tag name'
          schema:
            type: string
          required: true
      
      responses:
        '200':
          description: 'Ok. Unfollowed a Tag.'
        '403':
          description: 'Forbidden.'
        
  /tag/create:
    
    get:
      operationId: R404
      summary: 'R404: Tag Creation Form'
      description: 'Provide Tag Creation Form. Access: ADM'
      tags:
        - 'M04: Tags'
        
      responses:
        '200': 
          description: 'Ok. Show Tag Creation Form.'
        '401':
          description: 'Unauthorized. You cannot access this page'
          
    post:
      operationId: R405
      summary: 'R405: Tag Creation Action'
      description: 'Processes the Tag Creation submission. Access: ADM'
      tags:
        - 'M04: Tags'
        
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
              required:
                - email
      
      responses:
        '302':
          description: 'Redirect after processing the Tag Creation form submission.'
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: 'Successful creation. Redirect to Tag Feed.'
                  value: '/tag/{name}'
                302Error:
                  description: 'Failed creation. Redirect back to Tag Creation form.'
                  value: '/tag/create'
      
  /tag/delete:
  
    post:
      operationId: R406
      summary: 'R406: Deletes a Tag.'
      description: 'Deletes a Tag. Access: ADM'
      tags:
        - 'M04: Tags'
        
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                id:
                  type: integer
              required:
                - id
    
      responses:
        '302':
          description: 'Redirect after deletion of Tag'
          headers:
            Location:
              schema:
                type: string
              example:
                302Success:
                  description: 'Success deleting Tag. Redirect to Main Feed.'
                  value: '/feed'

  ############# Search #############
  
  /feed:

    get:
      operationId: R501
      summary: 'R501: View Questions Feed'
      description: 'Retrieve a feed of questions. Access: PUB'
      tags:
        - 'M05: Search'
      responses:
        '200':
          description: 'Ok. Returns a feed of questions (UI14).'
         
  /search:
  
    get:
      operationId: R502
      summary: 'R502: View search page'
      description: 'Show search page. Access: PUB'
      tags:
        - 'M05: Search'
      
      responses:
        '200':
          description: 'Ok. Show Search Page UI (UI13)'
          
  /api/search:
    
    get:
      operationId: R503
      summary: 'R503: Search platform'
      description: 'Searches the platform for users or posts that match the inserted query and filters. Access: PUB'
      tags:
        - 'M05: Search'
        
      parameters:
        - in: query
          name: search
          description: 'Search content'
          schema:
            type: string
          required: true
        
      responses:
        '200':
          description: 'Success. Display list of users/content that match the query.'
        
      
         
  ############# Administration and Static Pages #############
  
  /mainfeatures:
    
    get:
      operationId: R601
      summary: 'R601: Main Features'
      description: 'Display the Main Features page. Access: PUB'
      tags: 
        - 'M06: Administration and Static Pages'
      
      responses:
        '200':
          description: 'OK. Show Main Features Page'
          
  /aboutus:
    
    get:
      operationId: R602
      summary: 'R602: About Us'
      description: 'Display the About Us page. Access: PUB'
      tags: 
        - 'M06: Administration and Static Pages'
      
      responses:
        '200':
          description: 'OK. Show About Us Page'
        
  /contacts:
    
    get:
      operationId: R603
      summary: 'R603: Contacts'
      description: 'Display the Contacts page. Access: PUB'
      tags: 
        - 'M06: Administration and Static Pages'
      
      responses:
        '200':
          description: 'OK. Show Contacts Page'
          
          
  /analytics:
      
    get:
      operationId: R604
      summary: 'R604: Analytics'
      description: 'Display the Analytics page. Access: ADM'
      tags: 
        - 'M06: Administration and Static Pages'
        
      responses:
        '200':
          description: 'OK. Show Analytics Page'
        '403':
          description: 'Forbidden. You do not have permission to access this page.'
            
  /manageusers:
      
    get:
      operationId: R605
      summary: 'R605: Manage Users Page'
      description: 'Display the Manage Users Page. Access: ADM'
      tags:
        - 'M06: Administration and Static Pages'
          
      responses:
        '200':
          description: 'OK. Show Manage Users Page'
        '403':
          description: 'Forbidden. You do not have permission to access this page.'
        
  /manageusers/block:
     
    post:
      operationId: R606
      summary: 'R606: Block User'
      description: 'Blocks a User. Access: ADM'
      tags:
        - 'M06: Administration and Static Pages'
         
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
              required:
                - user_id   
         
      responses:
        '200':
          description: 'Ok. User has been blocked'
        '401':
          description: 'Unauthorized. You do not have permission to perform this action.'
   
  /manageusers/unblock:
   
    post:
      operationId: R607
      summary: 'R607: Unblock User'
      description: 'Unblocks a User. Access: ADM'
      tags:
        - 'M06: Administration and Static Pages'
         
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
              required:
                - user_id   
         
      responses:
        '200':
          description: 'Ok. User has been unblocked'
        '401':
          description: 'Unauthorized. You do not have permission to perform this action.'   
   
  /manageusers/ban:
  
    post:
      operationId: R608
      summary: 'R608: Ban User'
      description: 'Bans a User. Access: ADM'
      tags:
        - 'M06: Administration and Static Pages'
         
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
              required:
                - user_id   
         
      responses:
        '200':
          description: 'Ok. User has been banned'
        '401':
          description: 'Unauthorized. You do not have permission to perform this action.'
   
  /manageusers/unban:
  
    post:
      operationId: R609
      summary: 'R609: Unban User'
      description: 'Unban a User. Access: ADM'
      tags:
        - 'M06: Administration and Static Pages'
         
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
              required:
                - user_id   
         
      responses:
        '200':
          description: 'Ok. User has been unbanned'
        '401':
          description: 'Unauthorized. You do not have permission to perform this action.'
   
  /manageusers/promote:
  
    post:
      operationId: R610
      summary: 'R610: Promote User'
      description: 'Promotes a User to Moderator. Access: ADM'
      tags:
        - 'M06: Administration and Static Pages'
         
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
              required:
                - user_id   
         
      responses:
        '200':
          description: 'Ok. User has been promoted to Moderator'
        '401':
          description: 'Unauthorized. You do not have permission to perform this action.'
   
  /manageusers/demote:
   
    post:
      operationId: R611
      summary: 'R611: Demote Moderator'
      description: 'Demotes a Moderator to regular User. Access: ADM'
      tags:
        - 'M06: Administration and Static Pages'
         
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
              required:
                - user_id   
         
      responses:
        '200':
          description: 'Ok. Moderator has been demoted to User'
        '401':
          description: 'Unauthorized. You do not have permission to perform this action.'
          
  ############# Moderator Pages #############        
  
  /users/{id}/activity:
  
    get:
      operationId: R701
      summary: 'R701: User Activity Log'
      description: 'Display a user activity log. Access: MOD, ADM'
      tags: 
        - 'M07: Moderator Pages'
        
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          
      responses:
        '200':
          description: 'OK. Show User Activity Log'
        '302':
         description: 'User does not exist'
         headers:
           Location:
             schema:
               type: string
             example:
               302Failure:
                 description: 'Failed. No user of given ID found. Redirect back to user profile'
                 value: '/users/{id}'
        '403':
          description: 'Forbidden. You do not have permission to access this page.'
  
